# 
# GSW_GAMMAT_ANALYTIC_CHECK_FUNCTION
# ===================================
#
# AIM: Load the same example data as used by eos80_legacy_gamma_n neutral
# density software to test that the functions
#   - gsw_gammat_analytic_CT
#   - gsw_gammat_analytic_theta_eos80
# return the correct output values 
#
# AUTHOR: Remi Tailleux, U. of Reading, 22 April 2022
# converted into python: Gabriel Wolf, U. of Reading, 6 May 2022
#--------------------------------------------------------------------------
# Longitude and latitude for the example data (not really needed for
# gammat_analytic functions
# -------------------------------------------------------------------------
long = 187.317;
lat = -41.6667;

import numpy as np
from gsw_gammat_analytic_CT import gsw_gammat_analytic_CT
from gsw_gammat_analytic_theta_eos80 import gsw_gammat_analytic_theta_eos80

# Practical salinity of the example data
#---------------------------------------
SP = np.array([35.066, \
35.086, \
35.089, \
35.078, \
35.025, \
34.851, \
34.696, \
34.572, \
34.531, \
34.509, \
34.496, \
34.452, \
34.458, \
34.456, \
34.488, \
34.536, \
34.579, \
34.612, \
34.642, \
34.657, \
34.685, \
34.707, \
34.72, \
34.729])

# In-situ temperature of the example data (in degC)
#--------------------------------------------------

t = np.array([12.25, \
12.21, \
12.09, \
11.99, \
11.69, \
10.54, \
9.35, \
8.36, \
7.86, \
7.43, \
6.87, \
6.04, \
5.5, \
4.9, \
4.04, \
3.29, \
2.78, \
2.45, \
2.211, \
2.011, \
1.894, \
1.788, \
1.554, \
1.38])

# Pressures for the example data (in dbar)
# ----------------------------------------
p = np.array([1.0, \
48.0, \
97.0, \
145.0, \
194.0, \
291.0, \
388.0, \
485.0, \
581.0, \
678.0, \
775.0, \
872.0, \
969.0, \
1066.0, \
1260.0, \
1454.0, \
1647.0, \
1841.0, \
2020.0, \
2216.0, \
2413.0, \
2611.0, \
2878.0, \
3000.0])

# Convert into reference composition form of salinity, potential
# temperature and conservative temperature
# -------------------------------------------------------------------------
#SA = gsw.gsw_SR_from_SP(SP)
#theta = gsw.gsw_pt_from_t(SA,t,p,0.)
#ct = gsw.gsw_CT_from_pt(SA,theta)

SA = np.array([35.231351218285731, \
  35.251445526857161, \
  35.254459673142875, \
  35.243407803428589, \
  35.190157885714299, \
  35.015337401142872, \
  34.859606509714297, \
  34.735021796571445, \
  34.693828464000013, \
  34.671724724571447, \
  34.658663424000018, \
  34.614455945142872, \
  34.620484237714301, \
  34.618474806857165, \
  34.650625700571446, \
  34.698852041142878, \
  34.742054804571445, \
  34.775210413714305, \
  34.805351876571450, \
  34.820422608000015, \
  34.848554640000017, \
  34.870658379428590, \
  34.883719680000013, \
  34.892762118857156])

theta = np.array([12.249868688056301, \
  12.203697296098236, \
  12.077320026042351, \
  11.971112957995825, \
  11.665106060002016, \
  10.504963219690024, \
   9.306489204199410, \
   8.308925064003715, \
   7.800637478908726, \
   7.362478873579396, \
   6.795560198511728, \
   5.961144918623146, \
   5.415651867677488, \
   4.811324468173289, \
   3.941603344232623, \
   3.182596559687842, \
   2.662263033884455, \
   2.320211535318934, \
   2.069392139302777, \
   1.855611506170574, \
   1.723140953964871, \
   1.601119682137361, \
   1.347091204743650, \
   1.165369057016933])

ct = np.array([12.237609482213946, \
  12.191018250268460, \
  12.064608709496309, \
  11.958663470652846, \
  11.653845552149233, \
  10.497425491198406, \
   9.301993888909932, \
   8.306643824842583, \
   7.799059476265040, \
   7.361287909531983, \
   6.794646111846593, \
   5.960987173303203, \
   5.415549668843942, \
   4.811425369843678, \
   3.941695058642227, \
   3.182611682721852, \
   2.662224456819176, \
   2.320144370523614, \
   2.069285595673471, \
   1.855565592890192, \
   1.723009486510075, \
   1.600944925079358, \
   1.347061039542143, \
   1.165451327062045])



# Reference values for gsw_gammat_analytic_theta_eos80 
# ----------------------------------------------------
gammat_eos80_known = np.array([26.657642122200624, \
  26.682675341378676, \
  26.710513181280987, \
  26.723199400583702, \
  26.742447574193090, \
  26.828213490881481, \
  26.922400984076340, \
  26.993860326495462, \
  27.044173046697491, \
  27.096214845363868, \
  27.173213370037125, \
  27.261058514332412, \
  27.342876700523092, \
  27.423445608767391, \
  27.561819747665453, \
  27.694094370380299, \
  27.791751930358071, \
  27.860568540526572, \
  27.917115033679238, \
  27.958373466829922, \
  28.000225317051040, \
  28.036243061302596, \
  28.086054595812747, \
  28.122340245924111])


zref_eos80 = np.array([305.716233327985, \
   313.084093853831, \
   321.549607440829, \
   325.506152585149, \
   331.631271168590, \
   360.841194167733, \
   396.999707445502, \
   427.780395373702, \
   451.457520946860, \
   477.923935279250, \
   521.312402561307, \
   578.184710815549, \
   639.951856806874, \
   711.350975558162, \
   868.275677785277, \
   1082.354480400681, \
   1309.839798137546, \
   1529.018858447671, \
   1764.884768053889, \
   1981.485703960061, \
   2251.657549291849, \
   2532.403867691755, \
   2991.355944424868, \
   3357.605669647455])

# Reference values for gsw_gammat_analytic_CT
# -------------------------------------------

gammat_teos10_known = np.array([26.657891374558027, \
  26.682917735211849, \
  26.710730614357313, \
  26.723394437919261, \
  26.742576785599134, \
  26.828136917416032, \
  26.922193865887362, \
  26.993610565091792, \
  27.043937903553548, \
  27.096015087484261, \
  27.173091098595052, \
  27.261071309959618, \
  27.343030369325291, \
  27.423768142314991, \
  27.562452884150936, \
  27.695059918342757, \
  27.793005672752326, \
  27.862072655587603, \
  27.918869197933340, \
  27.960352533991831, \
  28.002410092774230, \
  28.038576183565070, \
  28.088529066381643, \
  28.124775008101494])

zref_teos10 = np.array([305.788485333323, \
   313.156550750136, \
   321.616893634200, \
   325.567474588752, \
   331.672893837094, \
   360.813627019525, \
   396.914953365922, \
   427.667198702693, \
   451.342666521668, \
   477.818200364709, \
   521.239073947072, \
   578.193651512265, \
   640.077212825418, \
   711.661716923118, \
   869.122920557857, \
   1084.251558408141, \
   1313.316388055682, \
   1534.548209980130, \
   1773.236675187945, \
   1993.026213720441, \
   2267.365377396345, \
   2552.187900990248, \
   3015.785541385412, \
   3382.569599896669])

# Reference value for legacy neutral density software (not really needed)
# ------------------------------------------------------------------------

gamma_n_known = np.array([26.657202583296442, \
  26.682830469203406, \
  26.710963096615604, \
  26.723242299110460, \
  26.741488538021695, \
  26.825445912051336, \
  26.918689217252997, \
  26.989761790054338, \
  27.039067923101946, \
  27.089143151019517, \
  27.166567035269665, \
  27.260376554533835, \
  27.343619695291586, \
  27.421578895148251, \
  27.557338511940429, \
  27.698188932980081, \
  27.798443363873236, \
  27.866285802482334, \
  27.920185440895871, \
  27.959264296723756, \
  27.997866000490600, \
  28.031679411184577, \
  28.079958980601589, \
  28.117372360538731])

# Test gsw_gammat_analytic_theta_eos80 using SP and theta values
# --------------------------------------------------------------
gammat_eos80,zref_eos80,pref_eos80,sigref_eos80 = \
    gsw_gammat_analytic_theta_eos80(SP,theta)

gammat_teos10,zref_teos10,pref_teos10,sigref_teos10 = \
    gsw_gammat_analytic_CT(SA,ct); 

if np.any(abs(gammat_eos80_known - gammat_eos80) > 1e-6):
   print('Your installation of gsw_gammat_analytic_theta_eos80 has errors !\n')
else:
    print('This check function confirms that the \n')
    print('gsw_gammat_analytic_theta_eos80 is installed correctly.\n')

if np.any(abs(gammat_teos10_known - gammat_teos10) > 1e-6):
   print('Your installation of gsw_gammat_analytic_CT has errors !\n')
else:
    print('This check function confirms that the \n')
    print('gsw_gammat_analytic_CT is installed correctly.\n')

#if any(abs(gamma_n_known - gammat_eos80) > 8e-3)
#   fprintf(2,'Your installation of eos80_legacy_gamma_n has errors !\n');
#else
#    fprintf(1,'The eos80 legacy gamma_n check fuctions confirms that the \n');
#    fprintf(1,'eos80_legacy_gamma_n is installed correctly.\n');
#end
#
#if any(abs(gamma_n_known - gammat_teos10) > 9e-3)
#   fprintf(2,'Your installation of eos80_legacy_gamma_n has errors !\n');
#else
#    fprintf(1,'The eos80 legacy gamma_n check fuctions confirms that the \n');
#    fprintf(1,'eos80_legacy_gamma_n is installed correctly.\n');
#end
